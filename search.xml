<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Selenium+Java前端自动化测试教程]]></title>
      <url>%2F2016%2F11%2F24%2FSelenium-Java%E5%89%8D%E7%AB%AF%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%95%99%E7%A8%8B%2F</url>
      <content type="text"><![CDATA[#一、工具准备 Firefox浏览器（版本要求47以下，本教程版本为45.5，记得关掉它的自动更新。） JDK-1.8 Eclipse #二、环境搭建 ####·配置Selenium RC 下载 selenium-server-standalone-3.0.1下载地址 http://www.seleniumhq.org/download/ 启动selenium服务：将下载的zip包解压，然后在命令行进入解压文件的目录，输入java -jar seleniun-server-standalone-3.0.1.jar如图所示表示启动服务成功： ####·配置Selenium Webdriver 下载 selenium-java-3.0.1下载地址 http://www.seleniumhq.org/download/ 在Eclipse中新建Java Project 如图操作，导入所需jar包 ###·下载selenium3使用firefox时所需的驱动下载地址 https://github.com/mozilla/geckodriver/releases/tag/v0.9.0至此，项目环境搭建完成。 #三、测试示例新建一个名为test.java 的文件。实现效果：打开百度首页，输入“Selenium”，点击搜索。 package test; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.firefox.FirefoxDriver; public class baidu { public static void main(String[] args){ //引入geckodriver驱动 System.setProperty(&quot;webdriver.firefox.marionette&quot;,&quot;C:\\Users\\Jaden\\Desktop\\Test\\jar\\geckodriver.exe&quot;); //新建一个firefox浏览器实例 WebDriver driver = new FirefoxDriver(); //打开百度首页 driver.get(&quot;http://www.baidu.com&quot;); //根据id获取输入框 WebElement textInput = driver.findElement(By.id(&quot;kw&quot;)); //在输入框输入“Selenium” textInput.sendKeys(&quot;Selenium&quot;); //根据id获取“百度一下”按钮 WebElement submit = driver.findElement(By.id(&quot;su&quot;)); //点击按钮 submit.click(); } }]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[JS中的not defined和undefined]]></title>
      <url>%2F2016%2F11%2F23%2FJS%E4%B8%AD%E7%9A%84not%20defined%E5%92%8Cundefined%2F</url>
      <content type="text"><![CDATA[JS中关于变量常遇到的错误有两个，一个是“xx is not defined”,另一个是“undefined”。 一.区别1.”not defined” var a;//只声明变量，未赋值 console.log(a);//undefined 2.”undefined” //var a; console.log(a);//未声明变量且未赋值，a is not defined 结论：声明变量却没有对其进行赋值，即变量undefined;未声明也未赋值变量，即变量not defined.undefined:不明确的，也就是不知道用来干嘛的;not defined: 未定义的. 注：若变量a没有通过var声明，但是却赋值了，如： a = 1; console.log(a);//1 console.log(window.a)//1 当变量不加var声明时，默认在变量前面自动添加window.，也就成了window的属性。 再看一个例子： (function aa(){ var a = 1; b = 2; })(); console.log(a);//a is not defined console.log(window.a);//undefined console.log(b);//2 console.log(window.b);//2 结论：如果在方法中声明变量，则为局部变量.如果是在全局域中声明，则为全局变量. 二.判断两者都可以用typeof进行判断: var a; if (typeof(a) == &quot;undefined&quot;) { alert(&quot;undefined&quot;); } if (typeof(b) == &quot;undefined&quot;) { alert(&quot;undefined&quot;); }]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[超简单的Java发送邮件教程]]></title>
      <url>%2F2016%2F11%2F21%2F%E8%B6%85%E7%AE%80%E5%8D%95%E7%9A%84Java%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E6%95%99%E7%A8%8B%2F</url>
      <content type="text"><![CDATA[Java代码实现网易邮箱发送邮件教程 一. 下载并添加mail.jar包到项目中这里不附送下载链接，百度一下，你就知道。 二. 设置邮箱这里以网易邮箱为例 1.进入“设置”菜单，选择“POP3/SMTP/IMAP” 2.勾选下列选项，按照提示设置授权码。（记住授权码，后面代码要用到） 三. 代码示例import java.util.Properties; import javax.mail.Authenticator; import javax.mail.Message.RecipientType; import javax.mail.MessagingException; import javax.mail.PasswordAuthentication; import javax.mail.Session; import javax.mail.Transport; import javax.mail.internet.InternetAddress; import javax.mail.internet.MimeMessage; public class mail163 { public void main(String msg){ // 创建Properties 类用于记录邮箱的一些属性 Properties props = new Properties(); // 表示SMTP发送邮件，必须进行身份验证 props.put(&quot;mail.smtp.auth&quot;,&quot;true&quot;); //此处填写SMTP服务器 props.put(&quot;mail.smtp.host&quot;, &quot;smtp.163.com&quot;); //端口号，网易邮箱端口号为25 props.put(&quot;mail.smtp.port&quot;, &quot;25&quot;); // 此处填写你的账号 props.put(&quot;mail.user&quot;, &quot;xxx@163.com&quot;); // 此处的密码就是前面说的授权码 props.put(&quot;mail.password&quot;, &quot;xxx&quot;); // 构建授权信息，用于进行SMTP进行身份验证 Authenticator authenticator = new Authenticator() { protected PasswordAuthentication getPasswordAuthentication() { // 用户名、密码 String userName = props.getProperty(&quot;mail.user&quot;); String password = props.getProperty(&quot;mail.password&quot;); return new PasswordAuthentication(userName, password); } }; // 使用环境属性和授权信息，创建邮件会话 Session mailSession = Session.getInstance(props, authenticator); // 创建邮件消息 MimeMessage message = new MimeMessage(mailSession); // 设置发件人 InternetAddress form = null; try { form = new InternetAddress(props.getProperty(&quot;mail.user&quot;)); message.setFrom(form); // 设置收件人的邮箱 InternetAddress to = null; to = new InternetAddress(&quot;xxx@163.com&quot;); message.setRecipient(RecipientType.TO, to); // 设置邮件标题 message.setSubject(&quot;测试邮件&quot;); // 设置邮件的内容体 message.setContent(msg, &quot;text/html;charset=UTF-8&quot;); // 最后，发送邮件 Transport.send(message); System.out.println(&quot;邮件已发送,请查收！&quot;); } catch (MessagingException e) { e.printStackTrace(); } } }]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[mac远程桌面连接window证书或相关链接无效]]></title>
      <url>%2F2016%2F11%2F21%2Fmac%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5window%E8%AF%81%E4%B9%A6%E6%88%96%E7%9B%B8%E5%85%B3%E9%93%BE%E6%8E%A5%E6%97%A0%E6%95%88%2F</url>
      <content type="text"><![CDATA[要想通过mac远程连接到window，首先要安装mac的远程桌面连接软件，安装教程传送门：点我 安装好后，远程连接却报错，错误信息是“证书或相关链接无效”。 解决方法 在远程连接的window系统里，命令行输入gpedit.msc回车，进入“本地组策略编辑器”； 依次找到 计算机配置 - 管理模板 - Windows 组件 - 远程桌面服务 - 远程桌面会话主机 - 安全 - 远程（RDP）连接要求使用指定的安全层，如下图： 打开 远程（RDP）连接要求使用指定的安全层，如下图进行设置即可：]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[解决表单提交时中文unable to decode value]]></title>
      <url>%2F2016%2F11%2F21%2F%E8%A7%A3%E5%86%B3%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4unable%2F</url>
      <content type="text"><![CDATA[如果网页的页面编码是gb2312，而后端接收的编码是utf-8，提交含有中文值的表单时，就会报unable to decode value的错误，如下图：原本想通过js对提交的值进行编码转换操作，网上查了一下，原来form表单自带有一个“accept-charset”属性，通过它可以设置服务器处理表单的字符格式。所以只需要在要提交的表单加上accept-charset=”utf-8”即可解决]]></content>
    </entry>

    
  
  
</search>
